{"version":3,"sources":["components/Slide.js","components/Carrusel.js","components/CallToAction.js","components/Hero.js","pages/Home.js","components/CardCity.js","components/helpers/Spinner.js","redux/actions/citiesActions.js","pages/Cities.js","components/Error.js","components/Footer.js","redux/actions/authActions.js","components/NavBar.js","redux/actions/itinerariesActions.js","components/BoxComment.js","components/helpers/ContentEmpty.js","components/Comment.js","components/helpers/Alert.js","components/CardActivities.js","components/CardItinerary.js","pages/Itineraries.js","components/helpers/ToTop.js","pages/SignUp.js","pages/SignIn.js","App.js","redux/reducers/citiesReducer.js","redux/reducers/itinerariesReducer.js","redux/reducers/authReducer.js","redux/reducers/mainReducer.js","index.js"],"names":["Slide","props","item","map","slide","className","style","backgroundImage","src","header","id","Carrusel","items","useState","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","keyCities","slides","index","push","CarouselItem","onExiting","onExited","Carousel","interval","CarouselIndicators","onClickHandler","newIndex","CarouselControl","direction","directionText","CallToAction","imagenTravel","to","Button","color","alt","Hero","portada","connect","state","userLogged","authReducer","imagenes","CardCity","city","_id","country","description","SpinnerCube","citiesActions","loadCities","history","dispatch","getState","axios","get","then","response","type","payload","data","respuesta","catch","error","Swal","fire","icon","title","text","searchCities","valueInput","Cities","this","newCities","onChange","e","target","value","placeholder","loading","Spinner","React","Component","mapDispatchToProps","citiesReducer","newCitiesCurrent","allCities","Error","Footer","logo","exact","authActions","createNewUser","newUser","a","post","googleUser","success","errores","console","log","iniciarSesion","user","cerrarSesion","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","iniciarSesionLS","userLS","headers","token","status","width","padding","background","backdrop","click","setClick","picture","userPicture","handleClick","useHistory","activeClassName","onClick","itinerariesActions","loadItineraries","idCity","loadActivities","idItinerary","loadLikes","userToken","put","likes","like","Authorization","position","showConfirmButton","timer","dislike","addComment","comment","updateComment","idComment","deleteComment","saveCommentDB","deleteCommentAction","updateCommentAction","visible","setVisible","updatedComment","setUpdatedComment","commentUpdate","firstName","ContentEmpty","texto","itinerary","setComment","sendComment","comments","disabled","CardActivities","activity","image","isOpen","setIsOpen","changeNameBtn","setChangeNameBtn","setActivity","liked","setLiked","useEffect","idUser","toggle","authorPicture","authorName","Array","price","fill","elemento","usersLiked","includes","duration","hashtags","hashtag","Collapse","marginBottom","Intineraries","cityDetails","cities","match","params","cityFilter","filter","setState","itineraries","itinerariesReducer","intinerariesCity","ToTop","pathname","useLocation","window","scrollTo","mapdispatchtoProps","infoStatusUser","lastName","email","password","setNewUser","countries","setCountries","mensaje","mensajeError","setMensajeError","setErrores","readDataNewUser","field","name","sendDataNewUser","preventDefault","Object","values","some","valor","trim","toast","details","erroresAnteriores","context","label","message","responseGoogle","profileObj","givenName","googleId","imageUrl","familyName","action","clientId","buttonText","onSuccess","onFailure","cookiePolicy","setUser","readInput","sendDataUser","loginUser","localStorage","getItem","dataUser","JSON","parse","imagen","path","component","Home","Itineraries","SignUp","SignIn","initialState","toLowerCase","indexOf","setItem","stringify","clear","mainReducer","combineReducers","myStore","createStore","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.0d2e9a7a.chunk.js","sourcesContent":["\r\n\r\nconst Slide = (props) => {\r\n\r\n    return ( \r\n        <>\r\n            {props.item.map(slide => {\r\n                return (\r\n                    <div key={slide.id} className=\"contenedor-imagen\">\r\n                        <div className=\"imagen\" style={{backgroundImage: `url('./assets/${slide.src}')`}}>\r\n                            <div>\r\n                            <h3 className=\"cities-title\">{slide.header}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </>\r\n    );\r\n}\r\nexport default Slide;","import React, { useState } from 'react';\r\nimport {\r\n  Carousel,\r\n  CarouselItem,\r\n  CarouselControl,\r\n  CarouselIndicators,\r\n} from 'reactstrap';\r\nimport Slide from './Slide';\r\n\r\n\r\nconst Carrusel = () => {\r\n  const items = [\r\n    [\r\n      {\r\n        src: 'ushuaia.jpg',\r\n        header: 'Ushuaia',\r\n        id: 1\r\n      },\r\n      {\r\n        src: 'roma.jpg',\r\n        header: 'Rome',\r\n        id: 2\r\n      },\r\n      {\r\n        src: 'london.jpg',\r\n        header: 'London',\r\n        id: 3\r\n      },\r\n      {\r\n        src: 'paris.jpg',\r\n        header: 'Paris',\r\n        id: 4\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        src: 'newYork.jpg',\r\n        header: 'New York',\r\n        id: 5\r\n      },\r\n      {\r\n        src: 'sydney.jpg',\r\n        header: 'Sydney',\r\n        id: 6\r\n      },\r\n      {\r\n        src: 'Shangai.jpg',\r\n        header: 'Shanghai',\r\n        id: 8\r\n      },\r\n      {\r\n        src: 'seattle.jpg',\r\n        header: 'Seattle',\r\n        id: 7\r\n      }\r\n    ],\r\n    [\r\n      {\r\n        src: 'berlin.jpg',\r\n        header: 'Berlin',\r\n        id: 5\r\n      },\r\n      {\r\n        src: 'medellin.jpg',\r\n        header: 'Medellin',\r\n        id: 7\r\n      },\r\n      {\r\n        src: 'tokyo.jpg',\r\n        header: 'Tokyo',\r\n        id: 6\r\n      },\r\n      {\r\n        src: 'madrid.jpg',\r\n        header: 'Madrid',\r\n        id: 8\r\n      }\r\n    ]\r\n  ];\r\n\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n  const [animating, setAnimating] = useState(false);\r\n\r\n  const next = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const previous = () => {\r\n    if (animating) return;\r\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\r\n    setActiveIndex(nextIndex);\r\n  }\r\n\r\n  const goToIndex = (newIndex) => {\r\n    if (animating) return;\r\n    setActiveIndex(newIndex);\r\n  }\r\n  let keyCities = []\r\n  const slides = items.map((item, index) => {\r\n    keyCities.push(item[0].src)\r\n    return (\r\n      <CarouselItem\r\n        onExiting={() => setAnimating(true)}\r\n        onExited={() => setAnimating(false)}\r\n        key={index}\r\n      >\r\n        <div className=\"slide-container\">\r\n          <Slide item={item} />\r\n        </div>\r\n      </CarouselItem>\r\n    );\r\n  });\r\n  return (\r\n    <Carousel\r\n      activeIndex={activeIndex}\r\n      next={next}\r\n      previous={previous}\r\n      interval={4000}\r\n    >\r\n      <CarouselIndicators items={keyCities} activeIndex={activeIndex} onClickHandler={goToIndex} />\r\n      {slides}\r\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\r\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\r\n    </Carousel>\r\n  );\r\n}\r\nexport default Carrusel","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst CallToAction = ({imagenTravel}) => {\r\n    return(\r\n        <div className=\"call-to-action d-flex flex-colum my-container-small\">\r\n            \r\n            <div className=\"call-content d-flex flex-colum2\">\r\n                <p>LOOKING FOR ITINERARIES?</p>\r\n                <h2 className=\"flex-grow\">We Provide The Best Experience For You.</h2>\r\n                <p>With age, comes wisdom. With travel, comes understanding</p>\r\n                <NavLink to='/cities' ><Button  color=\"info\">Show Cities</Button>{' '}</NavLink>\r\n            </div>\r\n            <img className=\"travel-image\" src={`/assets/${imagenTravel}`} alt=\"imagen travel\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CallToAction;","\r\nconst Hero = (props) => {\r\n    return (\r\n        <div className=\"hero d-flex flex-colum\" style={{ backgroundImage: `url('./assets/${props.portada}')` }}>\r\n            <div className=\"contenedor-hero \">\r\n                <div className=\"content-hero text-center\">\r\n                    <h1 className=\"tittle-hero\">MyTinerary</h1>\r\n                    <p>Find your perfect trip, designed by insiders who know and love their cities!</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Hero;","import Carrusel from '../components/Carrusel';\r\nimport CallToAction from '../components/CallToAction';\r\nimport Hero from '../components/Hero'\r\nimport {connect} from 'react-redux';\r\nconst Home = (props) => {\r\n    var imagenes = {\r\n        portada: 'portada3.jpg',\r\n        imagenTravel: 'callToAction.PNG'\r\n    }\r\n    return (\r\n        <>\r\n            <Hero portada={imagenes.portada} />\r\n            <CallToAction imagenTravel={imagenes.imagenTravel} />\r\n            <div className=\"contenedor-carrusel\">\r\n                <h2 className=\"text-center\">Popular MYtineraries</h2>\r\n                <div className=\"carrusel\">\r\n                    <Carrusel />\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      userLogged: state.authReducer.userLogged\r\n    }\r\n  }\r\n\r\n  export default connect(mapStateToProps, null)(Home);","import { NavLink } from 'react-router-dom'\r\nconst CardCity = ({ city}) => {\r\n    return (\r\n        <>\r\n            {<NavLink to={`/city/${city._id}`}>\r\n                    <div key={city._id} className=\"card\">\r\n                        <div className=\"city-image\" style={{ backgroundImage: `url('./assets/${city.src}')` }}></div>\r\n                        <div className=\"card-info\">\r\n                            <h3>{city.city}</h3>\r\n                        </div>\r\n                        <div className=\"card-hover\">\r\n                            <h3>{city.city} - {city.country}</h3>\r\n                            <p className=\"description-card\">{city.description}</p>\r\n                        </div>\r\n                    </div>\r\n                </NavLink>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardCity","const SpinnerCube = () => {\r\n    return (\r\n        <div className=\"spinner-container\">\r\n            <div className=\"sk-folding-cube\">\r\n                <div className=\"sk-cube1 sk-cube\"></div>\r\n                <div className=\"sk-cube2 sk-cube\"></div>\r\n                <div className=\"sk-cube4 sk-cube\"></div>\r\n                <div className=\"sk-cube3 sk-cube\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpinnerCube;\r\n","import axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst citiesActions = {\r\n    loadCities: (history) => {\r\n        return (dispatch, getState) => {\r\n            //codigo asincrono\r\n            axios.get('https://mytinerary-adriel.herokuapp.com/api/cities')\r\n                .then(response => dispatch({\r\n                    type: 'LOAD_CITIES', payload: response.data.respuesta\r\n                }))\r\n                .catch(error => {\r\n                    Swal.fire({\r\n                        icon: 'error',\r\n                        title: 'Oops...',\r\n                        text: 'Something went wrong!',\r\n                    })\r\n                        .then(() => {\r\n                            history.push('/error')\r\n                        })\r\n                })\r\n        }\r\n    },\r\n    searchCities: (valueInput) => {\r\n        return (dispatch) => {\r\n            dispatch({ type: 'SEARCH_CITIES', payload: valueInput })\r\n        }\r\n    }\r\n}\r\nexport default citiesActions","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport CardCity from '../components/CardCity';\r\nimport SpinnerCube from '../components/helpers/Spinner';\r\nimport citiesActions from '../redux/actions/citiesActions';\r\nclass Cities extends React.Component {\r\n   \r\n    componentDidMount(){\r\n            if (this.props.newCities.length === 0) {\r\n                this.props.loadCities(this.props.history)\r\n            }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                <main className=\"main-cities\">\r\n                    <h1 className=\"tittle-cities\">Cities</h1>\r\n                    <div className=\"input-container\">\r\n                        <input onChange={(e)=>this.props.searchCities(e.target.value)} type=\"text\" placeholder=\"Search Cities\" />\r\n                    </div>\r\n                    {this.props.loading\r\n                        ? <SpinnerCube />\r\n                        : this.props.newCities.length === 0\r\n                            ? <div className=\"mensajeErrorBusqueda\" style={{ backgroundImage: `url('/assets/suitcase.jpg')` }}>\r\n                                <div className=\"mensajeContent\">\r\n                                    <h2>We can't find the city...</h2>\r\n                                    <p>Try another one!</p>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div className={this.props.newCities.length >= 2 ? 'grid-card' : ''}>\r\n                                {this.props.newCities.map(city => {\r\n                                    return (<CardCity key={city._id} city={city} history={this.props.history}/>)\r\n                                })}\r\n                            </div>\r\n                    }\r\n               </main> \r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n        newCities: state.citiesReducer.newCitiesCurrent,\r\n        allCities: state.citiesReducer.allCities,\r\n        loading: state.citiesReducer.loading\r\n    }\r\n}\r\nconst mapDispatchToProps ={\r\n    loadCities: citiesActions.loadCities,\r\n    searchCities: citiesActions.searchCities\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);","\r\nconst Error = () => {\r\n    return (\r\n        <>\r\n            <div className=\"spinner-container\">\r\n                <h1>Something went wrong!</h1>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nconst Footer = ({ logo }) => {\r\n    return (\r\n        <footer>\r\n            <div className=\"my-container-footer my-container-footer2\">\r\n                <div className=\" footer\">\r\n                    <div className=\"d-flex flex-colum footer-info\">\r\n                        <h3>MyTinerary</h3>\r\n                        <img className=\"logo\" src={`/assets/${logo}`} alt=\"logo\" />\r\n\r\n                    </div>\r\n                    <div className=\"d-flex flex-colum footer-info \">\r\n                        <h3>Site Map</h3>\r\n                        <NavLink exact to=\"/\"><i className=\"fas fa-home\" ></i>Home</NavLink>\r\n                        <NavLink to=\"/cities\"><i className=\"fas fa-map-marker-alt\"></i>Cities</NavLink>\r\n                    </div>\r\n                    <div className=\"d-flex flex-colum social-media\">\r\n                        <h3 className=\"text-center\">Social NetWorks</h3>\r\n                        <i className=\"fab fa-facebook\"></i>\r\n                        <i className=\"fab fa-instagram\"></i>\r\n                        <i className=\"fab fa-twitter\"></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"footer-copyrigth\">\r\n                <p className=\"text-center\">&copy; 2021 MyTynerary. All rights reserved.</p>\r\n            </div>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\n\r\nconst authActions = {\r\n    createNewUser: (newUser) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                let response = await axios.post('https://mytinerary-adriel.herokuapp.com/api/user/signup', newUser)\r\n                if (response.data.googleUser) {\r\n                    return response.data\r\n                }\r\n                if (!response.data.success) {\r\n                    return response.data.errores\r\n                }\r\n                dispatch({\r\n                    type: 'USER_LOG',\r\n                    payload: response.data.success ? response.data.respuesta : null\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    },\r\n    iniciarSesion: (user) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                let response = await axios.post('https://mytinerary-adriel.herokuapp.com/api/user/signin', user)\r\n                if (!response.data.success) {\r\n                    return response.data\r\n                }\r\n                dispatch({\r\n                    type: 'USER_LOG',\r\n                    payload: response.data.success ? response.data.respuesta : null\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    },\r\n    cerrarSesion: (history) => {\r\n        return (dispatch, getState) => {\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#3085d6',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, Sign Out!'\r\n              }).then((result) => {\r\n                if (result.isConfirmed) {\r\n                  Swal.fire(\r\n                    'We will miss you!',\r\n                    'Come back soon',\r\n                    'success'\r\n                  )\r\n                  dispatch({ type: 'LOGOUT_USER' })\r\n                  history.push('/')  \r\n                }\r\n              })\r\n        }\r\n    },\r\n    iniciarSesionLS: (userLS) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.get('https://mytinerary-adriel.herokuapp.com/api/user/logingLS', {\r\n                    headers: {\r\n                        'Authorization': 'Bearer ' + userLS.token\r\n                    }\r\n                })\r\n                dispatch({\r\n                    type: 'USER_LOG', payload: {\r\n                        ...response.data.respuesta,\r\n                        token: userLS.token\r\n                    }\r\n                })\r\n            } catch (error) {\r\n                console.log(error);\r\n                if (error.response.status === 401) {\r\n                    Swal.fire({\r\n                        title: 'No no no...Maybe another day',\r\n                        width: 600,\r\n                        padding: '3em',\r\n                        background: '#fff url(/images/trees.png)',\r\n                        backdrop: `\r\n                          rgba(0,0,123,0.4)\r\n                          url(\"/assets/giphy.webp\")\r\n                          left top\r\n                          no-repeat\r\n                        `\r\n                    })\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default authActions","import React, { useState } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport authActions from '../redux/actions/authActions';\r\n\r\nconst NavBar = (props) => { \r\n    \r\n    const [click, setClick] = useState(false);\r\n    let picture = props.userLogged ? `${props.userLogged.userPicture}` : '/assets/userIcon.png'\r\n    const handleClick = () => setClick(!click);\r\n    const history = useHistory()\r\n    \r\n    return (\r\n        <>\r\n            <nav className=\"navbar\">\r\n                <div className=\"nav-container\">\r\n                    <NavLink exact to=\"/\" className=\"nav-logo\">\r\n                        <img className=\"logo\" src={`/assets/logo.png`} alt=\"logo\" />\r\n                    </NavLink>\r\n                    <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact to=\"/\" activeClassName=\"active\" className=\"nav-links\" onClick={handleClick}>Home</NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact to=\"/cities\" activeClassName=\"active\" className=\"nav-links\" onClick={handleClick}>Cities</NavLink>\r\n                        </li>\r\n                        {!props.userLogged\r\n                            &&\r\n                            <>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink exact to=\"/signin\" activeClassName=\"active\" className=\"nav-links\" onClick={handleClick}>Sign In</NavLink>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink exact to=\"/signup\" activeClassName=\"active\" className=\"nav-links\" onClick={handleClick}>Sign Up</NavLink>\r\n                                </li>\r\n                            </>}\r\n\r\n                        <li className=\"nav-item\">\r\n                            <NavLink exact to=\"#\" activeClassName=\"active\" className=\"nav-links\" onClick={handleClick}> <div className=\"userPicture\" style={{ backgroundImage: `url(${picture})` }}></div></NavLink>\r\n                        </li>\r\n                        {props.userLogged &&\r\n                            <>\r\n                                <li className=\"nav-item\">\r\n                                    <NavLink exact to=\"#\" activeClassName=\"active\" className=\"nav-links\"><h3 className='signout' onClick={()=> props.cerrarSesion(history)}>Sign Out</h3></NavLink>\r\n                                </li>\r\n                            </>}\r\n                    </ul>\r\n                    <div className=\"nav-icon\" onClick={handleClick}>\r\n                        <i className={click ? \"fas fa-times\" : \"fas fa-bars\"}></i>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userLogged: state.authReducer.userLogged\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    cerrarSesion: authActions.cerrarSesion\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\r\n","import axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\n\r\n\r\nconst itinerariesActions = {\r\n    loadItineraries: (idCity, history) => {\r\n        return (dispatch) => {\r\n            axios.get(`https://mytinerary-adriel.herokuapp.com/api/city/itineraries/${idCity}`)\r\n                .then(response => dispatch({ type: 'FETCH_ITINERARIES', payload: response.data.respuesta }))\r\n                .catch(error => {\r\n                   console.log(error);\r\n                })\r\n        }\r\n    },\r\n    loadActivities: (idItinerary) => {\r\n\r\n        return async (dispatch) => {\r\n            try {\r\n                const respuesta = await axios.get(`https://mytinerary-adriel.herokuapp.com/api/activities/itinerary/${idItinerary}`)\r\n                if (respuesta.data.success) {\r\n                    return respuesta.data.respuesta\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    },\r\n    loadLikes: (idItinerary, userToken) => {\r\n\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.put(`https://mytinerary-adriel.herokuapp.com/api/likes/${idItinerary}`, {}, {\r\n                    headers: { 'Authorization': 'Bearer ' + userToken }\r\n                })\r\n                if (response) {\r\n                    return response.data.respuesta.likes\r\n                }\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    },\r\n    like: (id, token) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.post('https://mytinerary-adriel.herokuapp.com/api/likes', { id, token }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${token}`\r\n                    }\r\n                })\r\n                dispatch({ type: 'LIKE_ITINERARY', payload: response.data.respuesta })\r\n            } catch (error) {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'error',\r\n                    title: 'Oops something went wrong, try again later!',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n            }\r\n        }\r\n    },\r\n\r\n    dislike: (id, token) => {\r\n        return async (dispatch, getState) => {\r\n            try {\r\n                const response = await axios.post('https://mytinerary-adriel.herokuapp.com/api/dislike', { token, id }, {\r\n                    headers: {\r\n                        Authorization: 'Bearer ' + token\r\n                    }\r\n                })\r\n                dispatch({ type: 'LIKE_ITINERARY', payload: response.data.respuesta })\r\n            } catch (error) {\r\n                Swal.fire({\r\n                    position: 'top',\r\n                    icon: 'error',\r\n                    title: 'Oops something went wrong, try again later!',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                })\r\n            }\r\n        }\r\n    },\r\n    addComment: (comment, token, idItinerary) => {\r\n        return async (dispatch, getState) => {\r\n          try {\r\n            const response = await axios.post('https://mytinerary-adriel.herokuapp.com/api/comments', {comment, token, idItinerary} , {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`\r\n              }\r\n            })\r\n            dispatch({type: 'COMMENT', payload: response.data.respuesta})\r\n          }catch(error){\r\n            Swal.fire({\r\n              position: 'top',\r\n              icon: 'error',\r\n              title: 'Oops something went wrong, try again later!',\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            })\r\n          }\r\n        }\r\n      },\r\n      updateComment: (comment, idComment, idItinerary, token) => {\r\n        return async (dispatch, getState) => {\r\n          try {\r\n            const response = await axios.put('https://mytinerary-adriel.herokuapp.com/api/comments/update', {comment, idComment, idItinerary, token}, {\r\n              headers: {\r\n                Authorization: `Bearer ${token}`\r\n              }\r\n            })\r\n            dispatch({type: 'COMMENT', payload: response.data.respuesta})\r\n          }\r\n          catch(error){\r\n            Swal.fire({\r\n              position: 'top',\r\n              icon: 'error',\r\n              title: 'Oops something went wrong, try again later!',\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            })\r\n          }\r\n        }\r\n      },\r\n    \r\n      deleteComment: (idComment, idItinerary, token) => {\r\n        return async (dispatch, getState) => {\r\n          try {\r\n            const response = await axios.put('https://mytinerary-adriel.herokuapp.com/api/comments', {idComment, idItinerary, token}, {\r\n              headers: {\r\n                Authorization: 'Bearer '+ token\r\n              }\r\n            })\r\n            dispatch({type: 'COMMENT', payload: response.data.respuesta})\r\n          }\r\n          catch(error){\r\n            Swal.fire({\r\n              position: 'top',\r\n              icon: 'error',\r\n              title: 'Oops something went wrong, try again later!',\r\n              showConfirmButton: false,\r\n              timer: 1500\r\n            })\r\n          }\r\n        }\r\n      },\r\n    saveCommentDB: (comment, idItinerary, userToken) => {\r\n        return async (dispatch) => {\r\n            try {\r\n                const response = await axios.post(`https://mytinerary-adriel.herokuapp.com/api/comments/itinerary/${idItinerary}`, comment, {\r\n                    headers: { 'Authorization': 'Bearer ' + userToken }\r\n                })\r\n\r\n                dispatch({ type: 'FETCH_ITINERARIES', payload: response.data.respuesta })\r\n\r\n\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n    }\r\n    \r\n}\r\n\r\nexport default itinerariesActions\r\n\r\n// updateComment: (commentEdit, idItinerary, userToken) => {\r\n//     return async (dispatch) => {\r\n\r\n//         try {\r\n//             const response = await axios.put(`https://mytinerary-adriel.herokuapp.com/api/editcomments/itinerary/${idItinerary}`, commentEdit, {\r\n//                 headers: { 'Authorization': 'Bearer ' + userToken }\r\n//             })\r\n//             dispatch({ type: 'FETCH_ITINERARIES', payload: response.data.respuesta })\r\n//         } catch (error) {\r\n//             console.log(error);\r\n//         }\r\n//     }\r\n// }","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport itinerariesActions from '../redux/actions/itinerariesActions';\r\nimport Swal from 'sweetalert2'\r\n// import {alertYouSure} from './helpers/Alert'\r\nconst BoxComment = ({ comment, idItinerary, userLogged, updateCommentAction, deleteCommentAction}) => {\r\n    const [visible, setVisible] = useState(false)\r\n    const [updatedComment, setUpdatedComment] = useState('')\r\n\r\n    const editComment = () => {\r\n        setVisible(!visible)\r\n        setUpdatedComment(comment.comment)\r\n    }\r\n    const commentUpdate = async () => {\r\n        if (updatedComment === '') {\r\n            Swal.fire({\r\n                position: 'top',\r\n                icon: 'warning',\r\n                title: \"You can't send an empty comment\",\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            })\r\n            return false\r\n        }\r\n        Swal.fire({\r\n            title: 'Are you sure you want to save the changes?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6', \r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, Save changes!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                updateCommentAction(updatedComment, comment._id, idItinerary, userLogged.token)\r\n                setVisible(!visible)  \r\n              Swal.fire(\r\n                'Changes have been saved!',\r\n                '',\r\n                'success'\r\n              )     \r\n            }\r\n          })\r\n    }\r\n    const deleteComment = () => {\r\n        Swal.fire({\r\n            title: 'Are you sure you want to delete this comment?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete!'\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n            deleteCommentAction(comment._id, idItinerary, userLogged.token)  \r\n              Swal.fire(\r\n                'Your comment was deleted!',\r\n                '',\r\n                'success'\r\n              )     \r\n            }\r\n          })\r\n    }\r\n    return (\r\n        <div className=\"comment-content\">\r\n            <div className=\"comment\">\r\n                <div className=\"picture-user\" style={{ backgroundImage: `url(${comment.userPicture})` }}></div>\r\n            </div>\r\n            {visible ?\r\n                <>\r\n                    <div className=\"input-field-comment update-cmt\">\r\n                        <input type=\"text\" onChange={(e) => setUpdatedComment(e.target.value)} value={updatedComment} />\r\n                        <i className=\"fas fa-paper-plane icon-up\" onClick={commentUpdate}></i>\r\n                    </div>\r\n                    <div className=\"contenedor-icon\">\r\n                        <i className=\"fas fa-times-circle red icon-up\" onClick={() => setVisible(!visible)}></i>\r\n                    </div>\r\n                </>\r\n                : <div className=\"text-comment\">\r\n                    <h5>{comment.firstName}</h5>\r\n                    <p>{comment.comment}</p>\r\n                    {userLogged &&\r\n                        userLogged.firstName === comment.firstName &&\r\n                            <div className=\"contenedor-icon-update\">\r\n                                <i className=\"fas fa-edit one icon-up\" onClick={editComment}></i>\r\n                                <i className=\"fas fa-trash-alt icon-up\"  onClick={deleteComment}></i>\r\n                            </div>\r\n                    }\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\nconst mapDispatchToProps = {\r\n    deleteCommentAction: itinerariesActions.deleteComment,\r\n    updateCommentAction: itinerariesActions.updateComment\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BoxComment);","const ContentEmpty = ({texto}) => {\r\n    return ( \r\n        <div className=\"contenedor-vacio\">\r\n            <h4>{texto}</h4> \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default ContentEmpty;","import { useState } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport itinerariesActions from '../redux/actions/itinerariesActions';\r\nimport BoxComment from \"./BoxComment\";\r\nimport ContentEmpty from \"./helpers/ContentEmpty\";\r\nimport {alert} from \"./helpers/Alert\";\r\nimport Swal from 'sweetalert2'\r\n\r\nconst Comment = ({ userLogged, itinerary, addComment, idCity }) => {\r\n    const [comment, setComment] = useState('')\r\n\r\n    const sendComment = async () => {\r\n        if (comment === '') {\r\n            Swal.fire({\r\n                position: 'top',\r\n                icon: 'warning',\r\n                title: \"You can't send an empty comment\",\r\n                showConfirmButton: false,\r\n                timer: 2000\r\n            })\r\n            return false\r\n        }\r\n        await addComment(comment, userLogged.token, itinerary._id)\r\n        setComment('')\r\n    }\r\n    return (\r\n        <>\r\n            <h2 className=\"comentarios-title\">Comments</h2>\r\n            <div className=\"comments-container\">\r\n                <div className=\"comments-post\">\r\n                    {itinerary.comments.length === 0\r\n                        ? <ContentEmpty texto={'No comments yet'} />\r\n                        : itinerary.comments.map((comment, index) => {\r\n                            return <BoxComment key={index} comment={comment} userLogged={userLogged} idItinerary={itinerary._id} idCity={idCity} />\r\n                        })}\r\n                </div>\r\n                <div className=\"input-field-comment\">\r\n                    <input type=\"text\"  placeholder={!userLogged ? \"You need to be logged to comment!\" : \"Write a comment...\"} value={comment} disabled={!userLogged && true} onChange={(e) => setComment(e.target.value)} />\r\n                    <i className=\"fas fa-paper-plane enter\" id={itinerary._id} onClick={userLogged ? sendComment : () => alert()}></i>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addComment: itinerariesActions.addComment,\r\n}\r\nexport default connect(null, mapDispatchToProps)(Comment);\r\n\r\n","import Swal from 'sweetalert2'\r\n\r\n \r\nexport const alert = () => {\r\n        Swal.fire({\r\n            position: 'top',\r\n            icon: 'warning',\r\n            title: 'You must be logged to send a comment',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        })\r\n}\r\n// export const alertYouSure = (title, yourFunction, setState) => { Swal.fire({\r\n//     title: title,\r\n//     icon: 'warning',\r\n//     showCancelButton: true,\r\n//     confirmButtonColor: '#3085d6',\r\n//     cancelButtonColor: '#d33',\r\n//     confirmButtonText: 'Yes, Save changes!'\r\n//   }).then((result) => {\r\n//     if (result.isConfirmed) {\r\n//         yourFunction\r\n//         setState  \r\n//       Swal.fire(\r\n//         'Changes have been saved!',\r\n//         '',\r\n//         'success'\r\n//       )     \r\n//     }\r\n//   })\r\n// }","\r\nconst CardActivities = ({activity}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"activities-container\">\r\n                <h2>Activities</h2>\r\n                <div className=\"activities-content\">\r\n                    {activity.map((activity, index) => {\r\n                        return (\r\n                            <div key={index} className=\"activity-bgImage\" style={{ backgroundImage: `url('/assets/${activity.image}')` }}>\r\n                                <h3>{activity.title}</h3>\r\n                            </div>\r\n                        )\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardActivities;","import React, { useState, useEffect } from 'react';\r\nimport { Collapse, Button } from 'reactstrap';\r\nimport Comment from './Comment';\r\nimport { connect } from 'react-redux';\r\nimport itinerariesActions from '../redux/actions/itinerariesActions';\r\nimport CardActivities from './CardActivities';\r\nimport Swal from 'sweetalert2'\r\n\r\nconst CardItinerary = ({ itinerary, loadActivities, userLogged, idCity, like, dislike}) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [changeNameBtn, setChangeNameBtn] = useState('View More')\r\n    const [activity, setActivity] = useState([])\r\n    const [liked, setLiked] = useState('')\r\n\r\n    useEffect(()=> {\r\n        if(userLogged){\r\n          setLiked(userLogged.idUser)\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      },[])\r\n    const toggle = async () => {\r\n        setIsOpen(!isOpen);\r\n        if (!isOpen) {\r\n            setChangeNameBtn('View Less')\r\n            let respuesta = await loadActivities(itinerary._id)\r\n            setActivity(respuesta)\r\n            return false\r\n        }\r\n        setChangeNameBtn('View More')\r\n    }\r\n\r\n    const addLike =()=> {\r\n        like(itinerary._id, userLogged.token)\r\n      }\r\n    const dislikes =()=> {\r\n        dislike(itinerary._id, userLogged.token)\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container-itinerary\">\r\n                <h2>{itinerary.title}</h2>\r\n                <div className=\"author\">\r\n                    <div className=\"img-itinerary\" style={{ backgroundImage: `url('/assets/${itinerary.authorPicture}')` }}></div>\r\n                    <h3>{itinerary.authorName}</h3>\r\n                </div>\r\n                <div className=\"itinerary-details\">\r\n                    <p><span>Price:</span>{new Array(itinerary.price).fill(0).map((elemento, index) => <i key={index} className=\"money-icon far fa-money-bill-alt\"></i>)}</p>\r\n                    <p className=\"likes\">\r\n                      {itinerary.usersLiked.includes(liked) \r\n                      ?<i className=\"fas fa-heart heart-icon\" onClick={userLogged && dislikes}></i>\r\n                      :<i className=\"far fa-heart heart-icon\" onClick={userLogged ? addLike : ()=> Swal.fire({\r\n                        position: 'top',\r\n                        icon: 'warning',\r\n                        title: 'You have to be logged to like it',\r\n                        showConfirmButton: false,\r\n                        timer: 1500\r\n                      })} ></i>}{itinerary.usersLiked.length}</p>\r\n                    <p><span>Duration:</span> {itinerary.duration} hours</p>\r\n                </div>\r\n\r\n                <div className=\"hashtags\">\r\n                    {itinerary.hashtags.map((hashtag, index) => {\r\n                        return (<p key={index}>{hashtag}</p>)\r\n                    })}\r\n                </div>\r\n                <Collapse isOpen={isOpen}>\r\n                    <div className=\"contenedor-section-hidden\">\r\n                        <CardActivities activity={activity} />\r\n                        <Comment idCity={idCity} userLogged={userLogged} itinerary={itinerary} />\r\n                    </div>\r\n                </Collapse>\r\n                <Button color=\"primary\" onClick={toggle} style={{ marginBottom: '1rem' }}>{changeNameBtn}</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        userLogged: state.authReducer.userLogged,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadActivities: itinerariesActions.loadActivities,\r\n    like: itinerariesActions.like,\r\n    dislike: itinerariesActions.dislike,\r\n    loadItineraries: itinerariesActions.loadItineraries\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardItinerary)\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport CardItinerary from '../components/CardItinerary';\r\nimport itinerariesActions from '../redux/actions/itinerariesActions';\r\nimport SpinnerCube from '../components/helpers/Spinner';\r\n\r\nclass Intineraries extends React.Component {\r\n\r\n    state = {\r\n        cityDetails: null,\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.cities.length === 0) {\r\n            this.props.history.push('/cities')\r\n        }\r\n        if (!this.state.cityDetails) {\r\n            let idCity = this.props.match.params.id\r\n            let history = this.props.history\r\n            let cityFilter = this.props.cities.filter(city => city._id === idCity)\r\n            this.setState({\r\n                cityDetails: cityFilter\r\n            })\r\n            this.props.loadItineraries(idCity,history)\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.cityDetails === null\r\n                    ? <SpinnerCube />\r\n                    :\r\n                    <>\r\n                    \r\n                        <div className=\"itineraries-hero d-flex flex-centrado\" style={{ backgroundImage: `url('/assets/${this.state.cityDetails[0].src}')` }}>\r\n                            <div className=\"content-hero-itineraries\">\r\n                                <h1 className=\"text-center\">Welcome to {this.state.cityDetails[0].city} </h1>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            {this.props.itineraries.length === 0\r\n                                ? <div className=\"itineraries-hero d-flex flex-centrado\">\r\n                                    <div className=\"content-itinerary\" >\r\n                                        <h1 className=\"text-center\">We don't have itineraries for {this.state.cityDetails[0].city} </h1>\r\n                                        <p className=\"text-itinerary\">o back to see more cities!</p>\r\n                                    </div>\r\n                                </div>\r\n                                : this.props.itineraries\r\n                                 ?this.props.itineraries.map(itinerary => {\r\n                                    return (<CardItinerary key={itinerary._id} history = {this.props.history} idCity = {this.props.match.params.id} itinerary={itinerary} />)\r\n                                })\r\n                                 :null\r\n                            }\r\n                        </div>\r\n                        <div className=\"d-flex flex-centrado\">\r\n                            <NavLink exact to=\"/\"><button className=\"btn-go-back\"><i className=\"fas fa-arrow-left\"></i>Home</button></NavLink>\r\n                            <NavLink to=\"/cities\"><button className=\"btn-go-back\"><i className=\"fas fa-arrow-left\"></i>Cities</button></NavLink>\r\n                        </div>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n    };\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cities: state.citiesReducer.allCities,\r\n        itineraries: state.itinerariesReducer.intinerariesCity\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadItineraries: itinerariesActions.loadItineraries\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Intineraries)","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst ToTop = () => {\r\n    const {pathname} = useLocation()\r\n    useEffect(() => {\r\n        window.scrollTo(0,0)\r\n    },[pathname])\r\n    return null;\r\n}\r\n \r\nexport default ToTop;","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux';\r\nimport authActions from '../redux/actions/authActions'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\n\r\nconst SignUp = (props) => {\r\n\r\n    const [newUser, setNewUser] = useState({ firstName: '', lastName: '', email: '', password: '', userPicture: '', country: '' })\r\n    const [countries, setCountries] = useState([])\r\n    const [mensajeError, setMensajeError] = useState({ success: false, mensaje: '' })\r\n    const [errores, setErrores] = useState({ firstName: '', lastName: '', email: '', password: '', userPicture: '' })\r\n    useEffect(() => {\r\n        axios.get('https://restcountries.eu/rest/v2/all')\r\n            .then(response => setCountries(response.data))\r\n    }, [])\r\n\r\n    const readDataNewUser = (e) => {\r\n        let field = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        setNewUser({\r\n            ...newUser,\r\n            [field]: value\r\n        })\r\n    }\r\n\r\n    const sendDataNewUser = async (e = null, googleUser = null) => {\r\n        e && e.preventDefault();\r\n        let user = e ? newUser : googleUser\r\n        if (!googleUser) {\r\n            //evaluo si mi objeto user tiene campos vacios\r\n            if (Object.values(user).some(valor => valor ===\"\" )) {\r\n                setMensajeError({ success: true, mensaje: 'All fields are required' })\r\n                return false;\r\n            }\r\n        }\r\n        setMensajeError({ ...mensajeError, success: false })\r\n        let response = await props.createNewUser({ ...user, firstName: user.firstName.trim(), lastName: user.lastName.trim() })\r\n        if (response) {\r\n            if (response.googleUser) {\r\n                return toast.error(response.respuesta)\r\n            }\r\n            setErrores({ firstName: '', lastName: '', email: '', password: '', userPicture: '' })\r\n            if (!response.success) {\r\n                response.details.map(error => {\r\n                    return setErrores((erroresAnteriores) => {\r\n                        return { ...erroresAnteriores, [error.context.label]: error.message }\r\n                    })\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const responseGoogle = (response) => {\r\n        const { givenName, email, googleId, imageUrl, familyName } = response.profileObj\r\n        sendDataNewUser(null, { firstName: givenName, lastName: familyName, email: email, password: \"a\" + googleId, userPicture: imageUrl, country: 'Argentina' })\r\n    }\r\n    return (\r\n        <div className=\"container-all\">\r\n            <div className=\"call-to-action-form\">\r\n                <div className=\"content\">\r\n                    <h3>One of us?</h3>\r\n                    <p>You have an account? please, go to Sign In</p>\r\n                    <Link to=\"/signin\">\r\n                        <button className=\"btn-redirect\" id=\"sign-up-btn\">Sign In</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-form\">\r\n                <form action=\"#\" className=\"sign-in-form\">\r\n                    <h2 className=\"title\">Sign Up</h2>\r\n                    {mensajeError.success\r\n                        ? (\r\n                            <div className=\"mensaje-error\">{mensajeError.mensaje}</div>\r\n                        )\r\n                        : null}\r\n                    <div className=\"input-field\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                        <input type=\"text\" name=\"firstName\" value={newUser.firstName} placeholder=\"Your First Name\" onChange={readDataNewUser} />\r\n                    </div>\r\n                    {errores.firstName !== '' ? (<div className=\"mensaje-error-signup\">{errores.firstName}</div>) : null}\r\n                    <div className=\"input-field\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                        <input type=\"text\" name=\"lastName\" value={newUser.lastName} placeholder=\"Your Last Name\" onChange={readDataNewUser} />\r\n                    </div>\r\n                    {errores.lastName !== '' ? (<div className=\"mensaje-error-signup\">{errores.lastName}</div>) : null}\r\n                    <div className=\"input-field\">\r\n                        <i className=\"fas fa-envelope\"></i>\r\n                        <input type=\"email\" name=\"email\" value={newUser.email} placeholder=\"Your Email\" onChange={readDataNewUser} />\r\n                    </div>\r\n                    {errores.email !== '' ? (<div className=\"mensaje-error-signup\">{errores.email}</div>) : null}\r\n                    <div className=\"input-field\">\r\n                        <i className=\"fas fa-lock\"></i>\r\n                        <input type=\"password\" name=\"password\" value={newUser.password} placeholder=\"Your Password\" onChange={readDataNewUser} />\r\n                    </div>\r\n                    {errores.password !== '' ? (<div className=\"mensaje-error-signup\">{errores.password}</div>) : null}\r\n                    <div className=\"input-field\">\r\n                        <i className=\"fas fa-image\"></i>\r\n                        <input type=\"text\" name=\"userPicture\" value={newUser.userPicture} placeholder=\"URL of Your Picture\" onChange={readDataNewUser} />\r\n                    </div>\r\n                    {errores.userPicture !== '' ? (<div className=\"mensaje-error-signup\">{errores.userPicture}</div>) : null}\r\n                    <div className=\"input-field\">\r\n                        <i className=\"fas fa-globe-americas\"></i>\r\n                        <select name=\"country\" onChange={readDataNewUser} value={newUser.country}>\r\n                            <option value=\"\" >Choose Your Country</option>\r\n                            {countries.length === 0\r\n                                ? <option>not country</option>\r\n                                : countries.map((country, index) => {\r\n                                    return (<option key={index} value={country.name}>{country.name}</option>)\r\n                                })}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <button className=\"btn-form solid\" onClick={sendDataNewUser}>Sign Up</button>\r\n                    <ToastContainer />\r\n                    <p className=\"social-text\">Or</p>\r\n                    <GoogleLogin\r\n                        className=\"btn-google\"\r\n                        clientId=\"112919868081-jrnbtckjpmehq2v64aj4rrccs2mosics.apps.googleusercontent.com\"\r\n                        buttonText=\"Sign Up with Google\"\r\n                        onSuccess={responseGoogle}\r\n                        onFailure={responseGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        infoStatusUser: state.authReducer.userLogged\r\n    }\r\n}\r\nconst mapdispatchtoProps = {\r\n    createNewUser: authActions.createNewUser\r\n}\r\n\r\nexport default connect(mapStateToProps, mapdispatchtoProps)(SignUp)","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { connect } from 'react-redux';\r\nimport authActions from '../redux/actions/authActions'\r\nimport GoogleLogin from 'react-google-login';\r\n\r\nconst SignIn = (props) => {\r\n\r\n    const [user, setUser] = useState({ email: '', password: '' })\r\n    const [mensajeError, setMensajeError] = useState({ success: false, mensaje: '' })\r\n\r\n    const readInput = (e) => {\r\n        e.preventDefault()\r\n        let field = e.target.name;\r\n        let value = e.target.value;\r\n\r\n        setUser({\r\n            ...user,\r\n            [field]: value\r\n        })\r\n    }\r\n\r\n    const sendDataUser = async (e = null, googleUser = null) => {\r\n        e && e.preventDefault();\r\n        let loginUser = e ? user : googleUser\r\n        if (!googleUser) {\r\n            if (loginUser.email === '' || loginUser.password === '') {\r\n                setMensajeError({ success: true, mensaje: 'All fields are required' })\r\n                return\r\n            }\r\n        }\r\n        setMensajeError(false)\r\n        let response = await props.iniciarSesion(loginUser)\r\n        if (response) {\r\n            if (!response.success) {\r\n                setMensajeError({ success: true, mensaje: response.error })\r\n            } else {\r\n                toast.success('welcome')\r\n            }\r\n        }\r\n    }\r\n    \r\n    const responseGoogle = (response) => {\r\n        const { email, googleId } = response.profileObj\r\n        sendDataUser(null, { email: email, password: \"a\" + googleId })\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"container-all\">\r\n            <div className=\"container-form\">\r\n                <form action=\"#\" className=\"sign-in-form\">\r\n                    <h2 className=\"title\">Sign in</h2>\r\n                    {mensajeError.success\r\n                        ? (\r\n                            <h3 className=\"mensaje-error\">{mensajeError.mensaje}</h3>\r\n                        )\r\n                        : null}\r\n                    <div className=\"input-field\">\r\n                        <i className=\"fas fa-user\"></i>\r\n                        <input type=\"email\" name=\"email\" placeholder=\"Your Email\" value={user.email} onChange={readInput} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <i className=\"fas fa-lock\"></i>\r\n                        <input type=\"password\" name=\"password\" placeholder=\"Password\" value={user.password} onChange={readInput} />\r\n                    </div>\r\n                    <button className=\"btn-form solid\" onClick={sendDataUser}>Sign In</button>\r\n                    <ToastContainer />\r\n                    <p className=\"social-text\">Or</p>\r\n                    <GoogleLogin\r\n                        className=\"btn-google\"\r\n                        clientId=\"112919868081-jrnbtckjpmehq2v64aj4rrccs2mosics.apps.googleusercontent.com\"\r\n                        buttonText=\"Sign In with Google\"\r\n                        onSuccess={responseGoogle}\r\n                        onFailure={responseGoogle}\r\n                        cookiePolicy={'single_host_origin'}\r\n                    />\r\n                </form>\r\n            </div>\r\n            <div className=\"call-to-action-form\">\r\n                <div className=\"content\">\r\n                    <h3>New here?</h3>\r\n                    <p>Don't have an account? please, go to Sign Up</p>\r\n                    <Link to=\"/signup\">\r\n                        <button className=\"btn-redirect\" id=\"sign-up-btn\">Sign Up</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>  \r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    iniciarSesion: authActions.iniciarSesion\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn)","import Home from './pages/Home';\nimport Cities from './pages/Cities'\nimport Error from './components/Error'\nimport './App.css';\nimport {BrowserRouter, Route, Redirect, Switch} from 'react-router-dom'\nimport Footer from './components/Footer';\nimport NavBar from './components/NavBar';\nimport Itineraries from './pages/Itineraries'\nimport ToTop from './components/helpers/ToTop';\nimport SignUp from './pages/SignUp';\nimport SignIn from './pages/SignIn';\nimport {connect} from 'react-redux';\nimport authActions from './redux/actions/authActions';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst App = (props) => {\n  if (!props.userLogged && localStorage.getItem('token')) {\n    const dataUser = JSON.parse(localStorage.getItem('userLogged'))\n    const userLS = {\n      token: localStorage.getItem('token'),\n      ...dataUser\n    }\n    props.iniciarSesionLS(userLS)\n  }\n  var imagen = {\n    logo: 'logo.png'\n  }\n  if (props.userLogged) {       \n    toast.success(`Welcome ${props.userLogged.firstName}`)\n}\n  return (\n    <BrowserRouter>\n    <ToTop />\n    <NavBar logo={imagen.logo}/>\n    <ToastContainer />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/cities\" component={Cities} />\n        <Route  path=\"/city/:id\" component={Itineraries} />\n        {!props.userLogged && <Route  path=\"/signup\" component={SignUp} />}\n        {!props.userLogged && <Route  path=\"/signin\" component={SignIn} />}\n        <Route  path=\"/error\" component={Error} />\n        <Redirect to=\"/\"/>\n      </Switch>\n      <Footer logo={imagen.logo}/>\n    </BrowserRouter>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    userLogged: state.authReducer.userLogged\n  }\n}\n\nconst mapDispatchToProps = {\n  iniciarSesionLS: authActions.iniciarSesionLS,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","const initialState = {\r\n    allCities: [],\r\n    newCitiesCurrent:[],\r\n    loading: true\r\n}\r\nconst citiesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'LOAD_CITIES': \r\n            return {\r\n                allCities:action.payload,\r\n                newCitiesCurrent:action.payload,\r\n                loading: false\r\n            }\r\n        case 'SEARCH_CITIES':\r\n            let newCities;\r\n            let valueInput = action.payload.trim().toLowerCase()\r\n            if (valueInput === '') {\r\n                newCities = state.allCities\r\n            } else {\r\n                newCities = state.allCities.filter(city => city.city.toLowerCase().trim().indexOf(valueInput) === 0)\r\n            }\r\n            return {\r\n                ...state,\r\n                newCitiesCurrent: newCities\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default citiesReducer\r\n\r\n","const initialState = {\r\n    intinerariesCity: []\r\n}\r\n\r\nconst itinerariesReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case 'FETCH_ITINERARIES':\r\n            return {\r\n                ...state, \r\n                intinerariesCity: action.payload\r\n            }\r\n        case 'LIKE_ITINERARY':\r\n            return {\r\n                ...state,\r\n                intinerariesCity: state.intinerariesCity.map(itinerary => itinerary._id === action.payload._id ? action.payload : itinerary)\r\n            }\r\n        case 'COMMENT':\r\n            return {\r\n                ...state,\r\n                intinerariesCity: state.intinerariesCity.map(itinerary => itinerary._id === action.payload._id ? action.payload : itinerary)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default itinerariesReducer","const initialState = {\r\n    userLogged: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'USER_LOG':\r\n            if (action.payload) {\r\n                localStorage.setItem('userLogged', JSON.stringify({ firstName: action.payload.firstName, idUser: action.payload.idUser, userPicture: action.payload.userPicture }))\r\n                localStorage.setItem('token', action.payload.token)\r\n            }\r\n            return {\r\n                ...state,\r\n                userLogged: action.payload\r\n            }\r\n        case 'LOGOUT_USER':\r\n            localStorage.clear()\r\n            return {\r\n                ...state,\r\n                userLogged: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default authReducer\r\n\r\n\r\n","import {combineReducers} from 'redux';\r\nimport citiesReducer from './citiesReducer';\r\nimport itinerariesReducer from './itinerariesReducer';\r\nimport authReducer from './authReducer'\r\n\r\nconst mainReducer = combineReducers({\r\n    citiesReducer: citiesReducer,\r\n    itinerariesReducer: itinerariesReducer,\r\n    authReducer: authReducer,\r\n})\r\n\r\nexport default mainReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {applyMiddleware, createStore} from 'redux';\nimport mainReducer from './redux/reducers/mainReducer'\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\nconst myStore = createStore(mainReducer, applyMiddleware(thunk))\nReactDOM.render(\n    \n  <Provider store={myStore}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}